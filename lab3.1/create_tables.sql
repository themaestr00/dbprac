CREATE SCHEMA IF NOT EXISTS analytics
    AUTHORIZATION postgres;

CREATE TABLE IF NOT EXISTS analytics.dim_student (
	id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	first_name TEXT NOT NULL,
	last_name TEXT NOT NULL,
	group_number INT NOT NULL,
	student_info JSONB NOT NULL DEFAULT '{}'::jsonb
);

CREATE TABLE IF NOT EXISTS analytics.dim_term (
	id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	year SMALLINT NOT NULL CHECK (year BETWEEN 2000 AND EXTRACT(YEAR FROM CURRENT_DATE)),
	term_no SMALLINT NOT NULL CHECK (term_no BETWEEN 1 AND 12),
	
	UNIQUE (year, term_no)
);

CREATE TABLE IF NOT EXISTS analytics.dim_faculty (
	id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	name TEXT UNIQUE NOT NULL
);

CREATE TABLE IF NOT EXISTS analytics.fact_score (
	id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	student_id INT NOT NULL REFERENCES dim_student(id) ON UPDATE RESTRICT ON DELETE RESTRICT,
	faculty_id INT NOT NULL REFERENCES dim_faculty(id) ON UPDATE RESTRICT ON DELETE RESTRICT,
	term_id INT NOT NULL REFERENCES dim_term(id) ON UPDATE RESTRICT ON DELETE RESTRICT,
	avg_score_value FLOAT NOT NULL CHECK (avg_score_value BETWEEN 2 AND 5),

	UNIQUE(student_id, term_id, avg_score_value)
);

CREATE TABLE IF NOT EXISTS analytics.dim_date (
	id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	date DATE UNIQUE NOT NULL,
	quarter SMALLINT NOT NULL CHECK (quarter BETWEEN 1 AND 4),
	is_holiday BOOLEAN NOT NULL DEFAULT false
);

CREATE TABLE IF NOT EXISTS analytics.dim_educator (
	id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	first_name TEXT NOT NULL,
	last_name TEXT NOT NULL,
	educator_info JSONB NOT NULL DEFAULT '{}'::jsonb
);

CREATE TABLE IF NOT EXISTS analytics.dim_cathedra (
	id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	name TEXT NOT NULL,
	faculty_id INT REFERENCES analytics.dim_faculty(id) ON UPDATE RESTRICT ON DELETE RESTRICT
);

CREATE TABLE IF NOT EXISTS analytics.dim_article (
	id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	title TEXT NOT NULL,
	publish_date DATE NOT NULL,
	topics TEXT[]
);

CREATE TABLE IF NOT EXISTS analytics.fact_daily_educator_activity (
	id INT GENERATED ALWAYS AS IDENTITY PRIMARY KEY,
	date_id INT NOT NULL REFERENCES analytics.dim_date(id) ON UPDATE RESTRICT ON DELETE RESTRICT,
	educator_id INT NOT NULL REFERENCES analytics.dim_educator(id) ON UPDATE RESTRICT ON DELETE RESTRICT,
	cathedra_id INT NOT NULL REFERENCES analytics.dim_cathedra(id) ON UPDATE RESTRICT ON DELETE RESTRICT,
	article_id INT REFERENCES analytics.dim_article(id) ON UPDATE RESTRICT ON DELETE RESTRICT,
	conducted INT NOT NULL CHECK (conducted >= 0),
	published BOOLEAN NOT NULL
);
